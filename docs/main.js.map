{"version":3,"sources":["./src/app/demo/components/customise/customise.component.ts","./src/app/demo/components/customise/customise.component.html","./src/app/demo/components/demo.component.ts","./src/app/demo/components/demo.component.html","./src/app/demo/components/basic/basic.component.ts","./src/app/demo/components/basic/basic.component.html","./src/app/demo/components/uploaded/uploaded.component.ts","./src/app/demo/components/uploaded/uploaded.component.html","./src/environments/environment.ts","./src/app/demo/demo.module.ts","./src/app/demo/components/events/events.component.ts","./src/app/demo/components/events/events.component.html","./src/app/demo/components/disabled/disabled.component.ts","./src/app/demo/components/disabled/disabled.component.html","./src/app/readme/readme.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/demo/components/style/style.component.ts","./src/app/demo/components/style/style.component.html","../../projects/ng2-image-upload/src/lib/file-drop.directive.ts","../../projects/ng2-image-upload/src/lib/image-upload.service.ts","../../projects/ng2-image-upload/src/lib/file-holder.ts","../../projects/ng2-image-upload/src/lib/image-upload/image-upload.component.html","../../projects/ng2-image-upload/src/lib/image-upload/image-upload.component.ts","../../projects/ng2-image-upload/src/lib/image-upload.module.ts","../../projects/ng2-image-upload/src/public_api.ts","./src/app/readme/components/readme.component.ts","./src/app/readme/components/readme.component.html","./src/app/app.module.ts","./src/app/demo/components/filter/filter.component.ts","./src/app/demo/components/filter/filter.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":["i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance"],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'customise',\n  templateUrl: './customise.component.html'\n})\nexport class CustomiseComponent {\n}\n","<h4 class=\"mb-3 mt-5\">Custom Labels</h4>\n\n<image-upload url=\"http://mockbin.org/request\" buttonCaption=\"PRESS ME AAAAAAAAAH\" dropBoxMessage=\"DROP ON ME AAAAAAAAAH\" clearButtonCaption=\"CLEAR ME AAAAAAAAAH\"></image-upload>\n\n<pre><code class=\"language-markup\"><![CDATA[<image-upload\n  url=\"http://mockbin.org/request\"\n  buttonCaption=\"PRESS ME AAAAAAAAAH\"\n  dropBoxMessage=\"DROP ON ME AAAAAAAAAH\"\n  clearButtonCaption=\"CLEAR ME AAAAAAAAAH\">\n</image-upload>]]></code></pre>\n","import { Component, OnInit } from '@angular/core';\nimport * as Prism from 'prismjs';\n\n@Component({\n  templateUrl: './demo.component.html'\n})\nexport class DemoComponent implements OnInit {\n  ngOnInit(): void {\n    Prism.highlightAll(false);\n  }\n}\n","<div class=\"container mb-5\" highlight-js-content=\".highlight\">\n  <basic></basic>\n  <filter></filter>\n  <customise></customise>\n  <events></events>\n  <styles></styles>\n  <uploaded></uploaded>\n  <disabled></disabled>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'basic',\n  templateUrl: './basic.component.html'\n})\nexport class BasicExampleComponent {\n  myHeaders: { [header: string]: string | string[] } = {\n    'Authorization': 'MyToken',\n    'Another-Header': 'AnotherValue'\n  };\n}\n","<h4 class=\"mb-3 mt-3\">Basic Usage</h4>\n\n<image-upload url=\"http://mockbin.org/request\"></image-upload>\n\n<pre><code class=\"language-markup\"><![CDATA[<image-upload url=\"http://mockbin.org/request\"></image-upload>]]></code></pre>\n\n<h5 class=\"mb-3 mt-3\">With headers</h5>\n\n<image-upload url=\"http://mockbin.org/request\" [headers]=\"myHeaders\"></image-upload>\n\n<pre><code class=\"language-markup\"><![CDATA[<image-upload url=\"http://mockbin.org/request\" [headers]=\"myHeaders\"></image-upload>]]></code></pre>\n\n<pre><code class=\"language-typescript\"><![CDATA[myHeaders: { [header: string]: string | string[] } = {\n  'Authorization': 'MyToken',\n  'Another-Header': 'AnotherValue'\n};]]>\n</code></pre>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'uploaded',\n  templateUrl: './uploaded.component.html'\n})\nexport class UploadedExampleComponent implements OnInit {\n  images = [];\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.images = [\n        'https://static.independent.co.uk/s3fs-public/styles/story_medium/public/thumbnails/image/2016/10/11/14/beats-logo-1200-80.jpg',\n        'https://s-media-cache-ak0.pinimg.com/originals/68/fb/c7/68fbc7bc9eb8c530c6e804c4109ec647.jpg',\n        { fileName: 'google-image.jpg', url: 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png' }\n      ];\n    }, 1000);\n  }\n}\n","<h4 class=\"mb-3 mt-3\">Uploaded Usage</h4>\n\n<image-upload\n  url=\"http://mockbin.org/request\"\n  [uploadedFiles]=\"images\">\n</image-upload>\n\n<pre><code class=\"language-markup\"><![CDATA[<image-upload url=\"http://mockbin.org/request\" [uploadedFiles]=\"images\"></image-upload>]]></code></pre>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { ImageUploadModule } from 'ng2-op-image-upload';\n\nimport { BasicExampleComponent } from './components/basic/basic.component';\nimport { CustomiseComponent } from './components/customise/customise.component';\nimport { DemoComponent } from './components/demo.component';\nimport { DisabledExampleComponent } from './components/disabled/disabled.component';\nimport { EventsComponent } from './components/events/events.component';\nimport { FilterExampleComponent } from './components/filter/filter.component';\nimport { StyleComponent } from './components/style/style.component';\nimport { UploadedExampleComponent } from './components/uploaded/uploaded.component';\n\n@NgModule({\n  declarations: [\n    DemoComponent,\n    BasicExampleComponent,\n    FilterExampleComponent,\n    CustomiseComponent,\n    EventsComponent,\n    StyleComponent,\n    UploadedExampleComponent,\n    DisabledExampleComponent\n  ],\n  imports: [\n    ImageUploadModule\n  ]\n})\nexport class DemoModule {\n}\n","import { Component } from '@angular/core';\nimport { FileHolder } from 'ng2-op-image-upload';\n\n@Component({\n  selector: 'events',\n  templateUrl: './events.component.html'\n})\nexport class EventsComponent {\n  onUploadFinished(file: FileHolder) {\n    console.log(file);\n  }\n\n  onRemoved(file: FileHolder) {\n    console.log(file);\n  }\n\n  onUploadStateChanged(state: boolean) {\n    console.log(state);\n  }\n}\n","<h4 class=\"mb-3 mt-5\">Events</h4>\n\n<image-upload url=\"http://mockbin.org/request\"\n              (removed)=\"onRemoved($event)\"\n              (uploadFinished)=\"onUploadFinished($event)\"\n              (uploadStateChanged)=\"onUploadStateChanged($event)\">\n</image-upload>\n\n<pre><code class=\"language-markup\"><![CDATA[<image-upload\n  url=\"http://mockbin.org/request\"\n  (removed)=\"onRemoved($event)\"\n  (uploadFinished)=\"onUploadFinished($event)\"\n  (uploadStateChanged)=\"onUploadStateChanged($event)\">\n</image-upload>]]></code></pre>\n\n<pre><code class=\"language-typescript\"><![CDATA[onUploadFinished(file: FileHolder) {\n  console.log(file);\n}\n\nonRemoved(file: FileHolder) {\n  console.log(file);\n}\n\nonUploadStateChanged(state: boolean) {\n  console.log(state);\n}]]>\n</code></pre>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'disabled',\n  templateUrl: './disabled.component.html'\n})\nexport class DisabledExampleComponent { }\n","<h4 class=\"mb-3 mt-5\">Disable component</h4>\n\n<image-upload url=\"http://mockbin.org/request\" [disabled]=\"true\"></image-upload>\n\n<pre><code class=\"language-markup\"><![CDATA[<image-upload url=\"http://mockbin.org/request\" [disabled]=\"true\"></image-upload>]]></code></pre>\n","import { NgModule } from '@angular/core';\nimport { ReadmeComponent } from './components/readme.component';\n\n@NgModule({\n  declarations: [\n    ReadmeComponent\n  ],\n  imports: [\n  ]\n})\nexport class ReadmeModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n}\n","<div class=\"github-star-button\">\n  <a class=\"github-button\"\n     href=\"https://github.com/aberezkin/ng2-image-upload\"\n     data-icon=\"octicon-star\"\n     data-size=\"large\"\n     data-show-count=\"true\"\n     aria-label=\"Star aberezkin/ng2-image-upload on GitHub\"\n  >Star</a>\n</div>\n\n<div class=\"jumbotron jumbotron-fluid text-center\">\n  <h1 class=\"display-3\">\n    Angular Image Upload\n  </h1>\n  <p class=\"lead\">\n    Angular component for image uploading\n  </p>\n</div>\n\n<div class=\"d-flex justify-content-center align-items-center mb-3\">\n  <ul class=\"nav nav-pills\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"demo\" routerLinkActive=\"active\">Demo</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"readme\" routerLinkActive=\"active\">Readme</a>\n    </li>\n  </ul>\n</div>\n\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'styles',\n  templateUrl: './style.component.html'\n})\nexport class StyleComponent {\n  customStyle = {\n    selectButton: {\n      'background-color': 'yellow',\n      'border-radius': '25px',\n      'color': '#000'\n    },\n    clearButton: {\n      'background-color': '#FFF',\n      'border-radius': '25px',\n      'color': '#000',\n      'margin-left': '10px'\n    },\n    layout: {\n      'background-color': 'purple',\n      'border-radius': '25px',\n      'border': 'none',\n      'color': '#FFF',\n      'font-size': '15px',\n      'margin': '10px',\n      'padding-top': '5px',\n      'width': '500px'\n    },\n    previewPanel: {\n      'background-color': '#894489',\n      'border-radius': '0 0 25px 25px'\n    }\n  };\n}\n","<h4 class=\"mb-3 mt-5\">Styles</h4>\n\n<h5 class=\"mb-3 mt-3\">Custom CSS Class</h5>\n\n<image-upload url=\"http://mockbin.org/request\" class=\"customClass\"></image-upload>\n\n<pre><code class=\"language-markup\"><![CDATA[<image-upload url=\"http://mockbin.org/request\" class=\"customClass\"></image-upload>]]></code></pre>\n\n<pre><code class=\"language-css\"><![CDATA[.customClass {\n    background-color: #dd3;\n    border-radius: 5px;\n    margin:5px;\n    width: 500px;\n}\n\n.customClass .img-ul-upload {\n    background-color: #000 !important;\n}\n\n.customClass .img-ul-clear {\n    background-color: #B819BB !important;\n}\n\n.customClass .img-ul-drag-box-msg {\n    color: purple !important;\n}\n\n.customClass .img-ul-container {\n    background-color: #FF6CAD !important;\n}\n]]></code></pre>\n\n<h5 class=\"mb-3 mt-3\">Custom Style</h5>\n\n<image-upload url=\"http://mockbin.org/request\" [style]=\"customStyle\"></image-upload>\n\n<pre><code class=\"language-markup\"><![CDATA[<image-upload url=\"http://mockbin.org/request\" [style]=\"customStyle\"></image-upload>]]></code></pre>\n\n<pre><code class=\"language-typescript\"><![CDATA[customStyle = {\n    selectButton: {\n      \"background-color\": \"yellow\",\n      \"border-radius\": \"25px\",\n      \"color\": \"#000\"\n    },\n    clearButton: {\n      \"background-color\": \"#FFF\",\n      \"border-radius\": \"25px\",\n      \"color\": \"#000\",\n      \"margin-left\": \"10px\"\n    },\n    layout: {\n      \"background-color\": \"purple\",\n      \"border-radius\": \"25px\",\n      \"color\": \"#FFF\",\n      \"font-size\": \"15px\",\n      \"margin\": \"10px\",\n      \"padding-top\": \"5px\",\n      \"width\": \"500px\"\n    },\n    previewPanel: {\n      \"background-color\": \"#894489\",\n      \"border-radius\": \"0 0 25px 25px\",\n    }\n  }\n]]></code></pre>\n","import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: '[fileDrop]'\n})\nexport class FileDropDirective {\n  @Input() accept: string[];\n  @Output() fileOver: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() fileDrop: EventEmitter<FileList> = new EventEmitter<FileList>();\n\n  private static getDataTransfer(event: any): DataTransfer {\n    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n  }\n\n  private static hasFiles(types: any): boolean {\n    if (!types) {\n      return false;\n    }\n\n    if (types.indexOf) {\n      return types.indexOf('Files') !== -1;\n    }\n\n    if (types.contains) {\n      return types.contains('Files');\n    }\n\n    return false;\n  }\n\n  private static matchRule(rule: string, candidate: string) {\n    return new RegExp('^' + rule.split('*').join('.*') + '$').test(candidate);\n  }\n\n  @HostListener('drop', ['$event'])\n  onDrop(event: any) {\n    const dataTransfer = FileDropDirective.getDataTransfer(event);\n\n    if (!FileDropDirective.hasFiles(dataTransfer.types)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    const files = this.filterFiles(dataTransfer.files);\n\n    event.preventDefault();\n    this.fileOver.emit(false);\n    this.fileDrop.emit(files);\n  }\n\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event) {\n    this.fileOver.emit(false);\n  }\n\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: any) {\n    const dataTransfer = FileDropDirective.getDataTransfer(event);\n\n    if (!FileDropDirective.hasFiles(dataTransfer.types)) {\n      return;\n    }\n\n    dataTransfer.dropEffect = 'copy';\n    event.preventDefault();\n    this.fileOver.emit(true);\n  }\n\n  private filterFiles(files: FileList): any {\n    if (!this.accept || this.accept.length === 0) {\n      return files;\n    }\n\n    const acceptedFiles: File[] = [];\n\n    for (let i = 0; i < files.length; i++) {\n      for (let j = 0; j < this.accept.length; j++) {\n        if (FileDropDirective.matchRule(this.accept[j], files[i].type)) {\n          acceptedFiles.push(files[i]);\n          break;\n        }\n      }\n    }\n\n    return acceptedFiles;\n  }\n}\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ImageUploadService {\n  constructor(private http: HttpClient) {\n  }\n\n  public uploadImage(url: string,\n                     image: File,\n                     headers?: HttpHeaders | { [name: string]: string | string[] },\n                     partName: string = 'image',\n                     customFormData?: { [header: string]: string | Blob },\n                     withCredentials?: boolean): Observable<HttpResponse<any>> {\n    if (!url || url === '') {\n      throw new Error('Url is not set! Please set it before doing queries');\n    }\n\n    const formData = new FormData();\n\n    if (customFormData) {\n      for (const key of Object.keys(customFormData)) {\n        formData.append(key, customFormData[key]);\n      }\n    }\n\n    formData.append(partName, image);\n\n    return this.http.post(url, formData, { withCredentials, headers, observe: 'response' });\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\n\nexport class FileHolder {\n  public pending = false;\n  public serverResponse: { status: number, response: HttpResponse<any> };\n\n  constructor(public src: string, public file: File) {\n  }\n}\n","<div\n     fileDrop\n     [accept]=\"supportedExtensions\"\n     (fileOver)=\"onFileOver($event)\"\n     (fileDrop)=\"onFileChange($event)\"\n     [ngClass]=\"cssClass\"\n     [ngClass]=\"{'img-ul-file-is-over': fileOver}\"     \n     [ngStyle]=\"style?.layout\"\n>\n  <div class=\"img-ul-file-upload img-ul-hr-inline-group\">    \n    <label *ngIf=\"fileCounter != max\"\n      class=\"img-ul-upload img-ul-button\" \n      [ngStyle]=\"style?.selectButton\"\n      [ngClass]=\"{'img-ul-disabled': disabled}\">\n      <span [innerText]=\"buttonCaption\"></span>\n      <input\n        type=\"file\"\n        [disabled]=\"disabled\"\n        [accept]=\"supportedExtensions\"\n        [multiple]=\"max > 1\"\n        (change)=\"onFileChange(input.files)\"\n        #input>\n    </label>\n    <button *ngIf=\"fileCounter > 0\"\n      [disabled]=\"disabled\"\n      class=\"img-ul-clear img-ul-button\" \n      (click)=\"deleteAll()\" \n      [ngStyle]=\"style?.clearButton\"\n      [innerText]=\"clearButtonCaption\">\n    </button>\n    <div class=\"img-ul-drag-box-msg\" [innerText]=\"dropBoxMessage\"></div>\n  </div>\n\n  <p class=\"img-ul-file-too-large\" *ngIf=\"showFileTooLargeMessage\" [innerText]=\"fileTooLargeMessage\"></p>\n\n  <div *ngIf=\"preview\" class=\"img-ul-container img-ul-hr-inline-group\" [ngStyle]=\"style?.previewPanel\">\n    <div\n      class=\"img-ul-image\"\n      *ngFor=\"let file of files\"\n      (click)=\"previewFileClicked(file)\"\n      [ngStyle]=\"{'background-image': 'url('+ file.src +')'}\"\n    >\n      <div *ngIf=\"file.pending\" class=\"img-ul-loading-overlay\">\n        <div class=\"img-ul-spinning-circle\"></div>\n      </div>\n      <div *ngIf=\"!file.pending\" \n        [ngClass]=\"{'img-ul-disabled': disabled}\" \n        class=\"img-ul-x-mark\" \n        (click)=\"deleteFile(file)\">\n        <span class=\"img-ul-close\"></span>\n      </div>\n    </div>\n  </div>\n</div>","import { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\nimport { FileHolder } from '../file-holder';\nimport { ImageUploadService } from '../image-upload.service';\nimport { Style } from '../style';\nimport { UploadMetadata } from '../upload-metadata';\n\n@Component({\n  selector: 'image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.css']\n})\nexport class ImageUploadComponent implements OnInit, OnChanges {\n  files: FileHolder[] = [];\n  fileCounter = 0;\n  fileOver = false;\n  showFileTooLargeMessage = false;\n\n  @Input() beforeUpload: (metadata: UploadMetadata) => UploadMetadata | Promise<UploadMetadata> = metadata => metadata;\n  @Input() buttonCaption = 'Select Images';\n  @Input() disabled = false;\n  @Input('class') cssClass = 'img-ul';\n  @Input() clearButtonCaption = 'Clear';\n  @Input() dropBoxMessage = 'Drop your images here!';\n  @Input() fileTooLargeMessage: string;\n  @Input() headers: HttpHeaders | { [name: string]: string | string[] };\n  @Input() max = 100;\n  @Input() maxFileSize: number;\n  @Input() preview = true;\n  @Input() partName: string;\n  @Input() style: Style;\n  @Input('extensions') supportedExtensions: string[];\n  @Input() url: string;\n  @Input() withCredentials = false;\n  @Input() uploadedFiles: string[] | Array<{ url: string, fileName: string, blob?: Blob }> = [];\n  @Output() removed = new EventEmitter<FileHolder>();\n  @Output() uploadStateChanged = new EventEmitter<boolean>();\n  @Output() uploadFinished = new EventEmitter<FileHolder>();\n  @Output() previewClicked = new EventEmitter<FileHolder>();\n\n  @ViewChild('input')\n  private inputElement: ElementRef;\n  private pendingFilesCounter = 0;\n\n  constructor(private imageService: ImageUploadService) {\n  }\n\n  ngOnInit() {\n    if (!this.fileTooLargeMessage) {\n      this.fileTooLargeMessage = 'An image was too large and was not uploaded.' + (this.maxFileSize ? (' The maximum file size is ' + this.maxFileSize / 1024) + 'KiB.' : '');\n    }\n    this.supportedExtensions = this.supportedExtensions ? this.supportedExtensions.map((ext) => 'image/' + ext) : ['image/*'];\n  }\n\n  deleteAll() {\n    this.files.forEach(f => this.removed.emit(f));\n    this.files = [];\n    this.fileCounter = 0;\n    if (this.inputElement) {\n      this.inputElement.nativeElement.value = '';\n    }\n  }\n\n  deleteFile(file: FileHolder): void {\n    const index = this.files.indexOf(file);\n    this.files.splice(index, 1);\n    this.fileCounter--;\n    if (this.inputElement) {\n      this.inputElement.nativeElement.value = '';\n    }\n    this.removed.emit(file);\n  }\n\n  previewFileClicked(file: FileHolder) {\n    this.previewClicked.emit(file);\n  }\n\n  ngOnChanges(changes) {\n    if (changes.uploadedFiles && changes.uploadedFiles.currentValue.length > 0) {\n      this.processUploadedFiles();\n    }\n  }\n\n  onFileChange(files: FileList) {\n    if (this.disabled) return;\n\n    const remainingSlots = this.max - this.fileCounter;\n    const filesToUploadNum = files.length > remainingSlots ? remainingSlots : files.length;\n\n    if (this.url && filesToUploadNum !== 0) {\n      this.uploadStateChanged.emit(true);\n    }\n\n    this.fileCounter += filesToUploadNum;\n    this.showFileTooLargeMessage = false;\n    this.uploadFiles(files, filesToUploadNum);\n  }\n\n  onFileOver = (isOver) => this.fileOver = isOver;\n\n  private onResponse(response: HttpResponse<any>, fileHolder: FileHolder) {\n    fileHolder.serverResponse = { status: response.status, response };\n    fileHolder.pending = false;\n\n    this.uploadFinished.emit(fileHolder);\n\n    if (--this.pendingFilesCounter === 0) {\n      this.uploadStateChanged.emit(false);\n    }\n  }\n\n  private processUploadedFiles() {\n    for (let i = 0; i < this.uploadedFiles.length; i++) {\n      const data: any = this.uploadedFiles[i];\n\n      let fileBlob: Blob,\n        file: File,\n        fileUrl: string;\n\n      if (data instanceof Object) {\n        fileUrl = data.url;\n        fileBlob = (data.blob) ? data.blob : new Blob([data]);\n        file = new File([fileBlob], data.fileName);\n      } else {\n        fileUrl = data;\n        fileBlob = new Blob([fileUrl]);\n        file = new File([fileBlob], fileUrl);\n      }\n\n      this.files.push(new FileHolder(fileUrl, file));\n    }\n  }\n\n  private async uploadFiles(files: FileList, filesToUploadNum: number) {\n    for (let i = 0; i < filesToUploadNum; i++) {\n      const file = files[i];\n\n      if (this.maxFileSize && file && file.size > this.maxFileSize) {\n        this.fileCounter--;\n        this.inputElement.nativeElement.value = '';\n        this.showFileTooLargeMessage = true;\n        this.uploadStateChanged.emit(false);\n        continue;\n      }\n\n      const beforeUploadResult: UploadMetadata = await this.beforeUpload({ file, url: this.url, abort: false });\n\n      if (beforeUploadResult.abort) {\n        this.fileCounter--;\n        this.inputElement.nativeElement.value = '';\n        continue;\n      }\n\n      const img = document.createElement('img') as HTMLImageElement;\n      img.src = window.URL.createObjectURL(beforeUploadResult.file);\n\n      const reader = new FileReader();\n      reader.addEventListener('load', (event: any) => {\n        const fileHolder: FileHolder = new FileHolder(event.target.result, beforeUploadResult.file);\n        this.files.push(fileHolder);\n        this.uploadSingleFile(fileHolder, beforeUploadResult.url, beforeUploadResult.formData);\n      }, false);\n      reader.readAsDataURL(beforeUploadResult.file);\n    }\n  }\n\n  private uploadSingleFile(fileHolder: FileHolder, url = this.url, customForm?: { [name: string]: any }) {\n    if (url) {\n      this.pendingFilesCounter++;\n      fileHolder.pending = true;\n\n      this.imageService\n        .uploadImage(url, fileHolder.file, this.headers, this.partName, customForm, this.withCredentials)\n        .subscribe(\n          response => this.onResponse(response, fileHolder),\n          error => {\n            this.onResponse(error, fileHolder);\n            this.deleteFile(fileHolder);\n          });\n    } else {\n      this.uploadFinished.emit(fileHolder);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FileDropDirective } from './file-drop.directive';\nimport { ImageUploadService } from './image-upload.service';\nimport { ImageUploadComponent } from './image-upload/image-upload.component';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [\n    ImageUploadComponent,\n    FileDropDirective\n  ],\n  exports: [ImageUploadComponent]\n})\nexport class ImageUploadModule {\n  static forRoot(): ModuleWithProviders<ImageUploadModule> {\n    return {\n      ngModule: ImageUploadModule,\n      providers: [ImageUploadService]\n    };\n  }\n}\n","/*\n * Public API Surface of ng2-image-upload\n */\n\nexport * from './lib/image-upload.module';\nexport * from './lib/image-upload/image-upload.component';\nexport * from './lib/style';\nexport * from './lib/upload-metadata';\nexport * from './lib/file-holder';\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './readme.component.html'\n})\nexport class ReadmeComponent {\n}\n","<div class=\"container\">\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ImageUploadModule } from 'ng2-op-image-upload';\n\nimport { AppComponent } from './app.component';\nimport { DemoComponent } from './demo/components/demo.component';\nimport { DemoModule } from './demo/demo.module';\nimport { ReadmeComponent } from './readme/components/readme.component';\nimport { ReadmeModule } from './readme/readme.module';\n\nconst routes: Routes = [{\n  path: '',\n  redirectTo: 'demo',\n  pathMatch: 'prefix'\n}, {\n  path: 'demo',\n  component: DemoComponent\n}, {\n  path: 'readme',\n  component: ReadmeComponent\n}];\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes, { useHash: true }),\n    BrowserModule,\n    DemoModule,\n    ReadmeModule,\n    ImageUploadModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component } from '@angular/core';\nimport { UploadMetadata } from 'ng2-op-image-upload';\n\n@Component({\n  selector: 'filter',\n  templateUrl: './filter.component.html'\n})\nexport class FilterExampleComponent {\n  private fileCounter = 0;\n\n  onBeforeUpload = (metadata: UploadMetadata) => {\n    if (this.fileCounter % 2 === 0) {\n      metadata.abort = true;\n    } else {\n      // mutate the file or replace it entirely - metadata.file\n      metadata.url = 'http://somewhereelse.com';\n    }\n\n    this.fileCounter++;\n    return metadata;\n  };\n}\n","<h4 class=\"mb-3 mt-5\">Limit and filter images</h4>\n\n<image-upload url=\"http://mockbin.org/request\" [max]=\"2\" [extensions]=\"['jpeg','png']\"></image-upload>\n\n<pre><code class=\"language-markup\"><![CDATA[<image-upload url=\"http://mockbin.org/request\" [max]=\"2\" [extensions]=\"['jpeg','png']\"></image-upload>]]></code></pre>\n\n<h5 class=\"mb-3 mt-3\">Manual filtering and editing</h5>\n\n<image-upload url=\"http://mockbin.org/request\" [beforeUpload]=\"onBeforeUpload\"></image-upload>\n\n<pre><code class=\"language-markup\"><![CDATA[<image-upload url=\"http://mockbin.org/request\" [beforeUpload]=\"onBeforeUpload\"></image-upload>]]></code></pre>\n\n<pre><code class=\"language-typescript\"><![CDATA[private fileCounter = 0;\n\nonBeforeUpload = (metadata: UploadMetadata) => {\n  if (this.fileCounter % 2 === 0) {\n    metadata.abort = true;\n  } else {\n    // mutate the file or replace it entirely - metadata.file\n    metadata.url = 'http://somewhereelse.com'\n  }\n\n  this.fileCounter++;\n  return metadata;\n};]]></code></pre>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'prismjs';\nimport 'prismjs/components/prism-typescript';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}